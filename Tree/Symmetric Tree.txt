/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

 /**
 Hint:
 root,left,right traversal should be equal to root,right,left.
 */

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        return root==NULL|| symmetric(root->left,root->right);
        
    }
    bool symmetric(TreeNode* left1,TreeNode* right1)
    {
        if(left1==NULL||right1==NULL)
        return left1==right1;
        if(left1->val!=right1->val)
        return false;
        return symmetric(left1->left,right1->right) && symmetric(left1->right,right1->left);
    }
};