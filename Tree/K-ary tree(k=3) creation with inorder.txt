#include <iostream>
#include<bits/stdc++.h>
#include<queue>
using namespace std;
struct node
{
    int data;
    node *children[3];
};
struct node * newNode(int F)
{
    node *N=new node;
    N->children[0]=NULL;
     N->children[1]=NULL;
      N->children[2]=NULL;
    N->data=F;
    return N;
}
struct node* insertion(node *root,int n,queue<node *>&q)
{
     node * Node=newNode(n);
    if(root==NULL)
    {
     root=Node;
}
else if(q.front()->children[0]==NULL)
    q.front()->children[0]=Node;
    else if(q.front()->children[1]==NULL)
    q.front()->children[1]=Node;

else if(q.front()->children[2]==NULL)
{
    q.front()->children[2]=Node;
    q.pop();
}
q.push(Node);
return root;
}
void inorder(node *root)
{
    if(root==NULL)
        return;
    else
    {
        for(int i=0;i<2;i++)
        {
            inorder(root->children[i]);
        }
        cout<<root->data<<" ";
        inorder(root->children[2]);
    }
}
int main()
{
    node *root=NULL;
    queue<node *>q;
    root=insertion(root,10,q);
    root=insertion(root,20,q);
    root=insertion(root,30,q);
    root=insertion(root,40,q);
    root=insertion(root,50,q);
    root=insertion(root,45,q);
    root=insertion(root,35,q);
    root=insertion(root,25,q);
    root=insertion(root,15,q);
    root=insertion(root,5,q);
    root=insertion(root,8,q);
root=insertion(root,18,q);
root=insertion(root,28,q);
root=insertion(root,38,q);
cout<<"INORDER\n";
  inorder(root);
}
