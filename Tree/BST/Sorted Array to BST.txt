/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        vector<int>value;
        while(head)
        {
            value.push_back(head->val);
            head=head->next;
        }
        if(value.size()==0)
        return NULL;
        return bst(value,0,value.size()-1);
        
    }
    TreeNode * bst(vector<int>&value,int left,int right)
    {
        if(left>right)
        return NULL;
        int mid=left+(right-left)/2;
        TreeNode* Node=new TreeNode(value[mid]);
        Node->left=bst(value,left,mid-1);
        Node->right=bst(value,mid+1,right);
        return Node;

    }
};