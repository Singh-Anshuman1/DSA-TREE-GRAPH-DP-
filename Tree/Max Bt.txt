/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* build(vector<int>& nums,int start,int end)
    {
        if(start>end)
        return NULL;
        int idxmax=start;
        for(int i=start+1;i<=end;i++)
        {
            if(nums[idxmax]<nums[i])
            idxmax=i;
        }
        TreeNode* root=new TreeNode(nums[idxmax]);
        root->left=build(nums,start,idxmax-1);
        root->right=build(nums ,idxmax+1,end);
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        if(nums.size()==NULL)
        return NULL;
        return build(nums,0,nums.size()-1);
        
    }

};