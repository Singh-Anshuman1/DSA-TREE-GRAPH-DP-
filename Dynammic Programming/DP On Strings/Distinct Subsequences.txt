class Solution {
public:
    int dynamic(int index1,int index2,string &s,string &t,vector<vector<int>>&dp)
    {
        if(index2<0)
        return 1;
        if(index1<0)
        return 0;
        
        if(dp[index1][index2]!=-1)
        return dp[index1][index2];
        if(s[index1]==t[index2])// if character matches we can either look for any other possibilities in string s or check for next character in string t
        return dp[index1][index2]=dynamic(index1-1,index2-1,s,t,dp)+dynamic(index1-1,index2,s,t,dp);
        // if charcters dont match we have to check for next character in string s
        else
        return dp[index1][index2]=dynamic(index1-1,index2,s,t,dp);
    }
    int numDistinct(string s, string t) {
        int n=s.size();
        int m=t.size();
        vector<vector<int>>dp(n,vector<int>(m,-1));
        return dynamic(n-1,m-1,s,t,dp);

        
    }
};