class Solution{   
public:
    bool possible(vector<vector<int>>&dp,vector<int>&arr,int target,int n)
    {
        if(n==0)
        return arr[0]==target;
        if(target==0)
        return true;
        if(dp[n][target]!=-1)
        return dp[n][target];
        bool not_take=possible(dp,arr,target,n-1);
        bool take=0;
        if(target>=arr[n])
        take=possible(dp,arr,target-arr[n],n-1);
        return dp[n][target]=take|not_take;
    }
    bool isSubsetSum(vector<int>arr, int sum){
        int n=arr.size();
        vector<vector<int>>dp(n,vector<int>(sum+1,-1));
        return possible(dp,arr,sum,n-1);
    }
};